server.port=8888
server.servlet.context-path=/demo
spring.application.name=test
spring.boot.admin.client.url=http://localhost:12345
#spring.boot.admin.client.username=admin
#spring.boot.admin.client.password=admin
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#有這些設定就可滿足server自帶憑證檢查
#server.ssl.enabled=true
##初次產生的
#server.ssl.key-store=classpath:ssl/keystore.p12
#server.ssl.key-store-password=123456
#server.ssl.keyStoreType=JKS
#server.ssl.keyAlias=qq
##由初次的p12 > cer > p12
#server.ssl.trust-store=classpath:ssl/keystoreF.p12
#server.ssl.trust-store-password=123456
#server.ssl.client-auth=need
#server.ssl.trust-store-type=JKS
#server.ssl.trust-store-provider=SUN

docker.ip=10.0.0.9

logging.config=classpath:logback.xml

jasypt.encryptor.bean=jasyptStringEncryptor

spring.datasource.mysql.jdbc-url=jdbc:mysql://${docker.ip}:3306/test?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.mysql.username=root
spring.datasource.mysql.password=ENC(Qu+uze5RGio=)
spring.datasource.mysql.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.mysql.xmlpath=classpath:/mapper/*.xml
spring.datasource.mysql.max-idle=10
spring.datasource.mysql.max-wait=10000
spring.datasource.mysql.min-idle=5
spring.datasource.mysql.initial-size=5
spring.datasource.mysql.validation-query=select 1
spring.datasource.mysql.test-on.borrow=false
spring.datasource.mysql.test-while-idle=true
spring.datasource.mysql.time-between-eviction-runs-millis=18800

spring.flyway.locations=classpath:db
spring.flyway.url=${spring.datasource.mysql.jdbc-url}
spring.flyway.user=${spring.datasource.mysql.username}
spring.flyway.password=${spring.datasource.mysql.password}
spring.flyway.baseline-on-migrate=true
spring.flyway.table=flyway_version
spring.flyway.enabled=true

spring.cache.type=caffeine
spring.cache.cache-names=userInfo
spring.cache.caffeine.spec=maximumSize=10,expireAfterAccess=60s

#oauth2 必要配置
security.oauth2.resource.filter-order=3

#Redis
#spring.redis.database=11
#spring.redis.host=${docker.ip}
#spring.redis.port=6379
#spring.redis.password=
#spring.redis.timeout=2000
#spring.cache.redis.time-to-live=5000
## 連接池中的最大空閒連接
#spring.redis.jedis.pool.max-idle=8
## 連接池中的最小空閒連接
#spring.redis.jedis.pool.min-idle=0
## 連接池最大連接數（使用負值表示沒有限制）
#spring.redis.jedis.pool.max-active=8
## 連接池最大阻塞等待時間（使用負值表示沒有限制）
#spring.redis.jedis.pool.max-wait=-1
#spring.redis.jedis.pool.test-on-borrow=true
#spring.redis.jedis.pool.test-on-return=true

redis.host=${docker.ip}
redis.port=6379
redis.password=
redis.timeout=2000
redis.jedis.pool.max-idle=8
redis.jedis.pool.min-idle=0
redis.jedis.pool.max-active=8
redis.jedis.pool.max-wait=-1
redis.jedis.pool.test-on-borrow=true
redis.jedis.pool.test-on-return=true
redis.oauth.database=0
redis.cache.database=1


